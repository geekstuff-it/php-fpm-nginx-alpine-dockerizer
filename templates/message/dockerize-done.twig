
#### Dockerize complete!
You now have a multi-stage, multi-purpose Dockerfile, kept as lean as possible in every end stages, and 2 docker-compose configs.

## Details
These are the files that dockerize added:
{% for file in FILE_LIST %}
  {{ file.getFilenameWithoutExtension }}
{% endfor %}
  {{ NOTES_FILENAME }} (a copy of this "Dockerize complete" output)

## Easy DEV
`docker-compose up --build` and `docker-compose run php bash` should let you continue to build and run anything.

## self-contained / packaged prod stage that you can test out using docker-composer
`docker-compose -f docker-compose.prod-test.yml up --build` will build and run 2 self contained images for
php-fpm and nginx, re-using the same build base after which we can try to separate what belongs in which image,
automatically.

## Kubernetes friendly
Because we have 2 separate image that don't need to share a volume in between them, they can scale independently.

## Want to use a different forwarded host port for http with docker-compose?
`LOCAL_HTTP_PORT=12345 docker-compose up --build`

## What's next?
Now you might still be in the init phase. Simply exit and start using docker-compose on your project!
